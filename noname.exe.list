EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
noname.exe -- emu8086 assembler version: 4.08  
 
[ 12/24/2021  --  1:13:14 AM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .Model Small
[   2]        :                                       .Stack 64
[   3]        :                                       .Data
[   4]        :                                       chickenWidth EQU 320
[   5]        :                                       chickenHeight EQU 200
[   6]        :                                       
[   7]    0040: 63 68 69 63 6B 2E 62 69 6E 00         chickenFilename DB 'chick.bin', 0
[   8]        :                                       
[   9]    004A: 00 00                                 chickenFilehandle DW ?
[  10]        :                                       
[  11]    004C:                                       chickenData DB 320*200 dup(0)
[  12]        :                                       
[  13]        :                                       .Code
[  14]        :                                       OpenFile MACRO
[  15]        :                                       
[  16]        :                                       ; Open file
[  17]        :                                       
[  18]        :                                       MOV AH, 03Dh
[  19]        :                                       MOV AL, 0 ; read only
[  20]        :                                       LEA DX, chickenFilename
[  21]        :                                       INT 21h
[  22]        :                                       ; you should check carry flag to make sure it worked correctly
[  23]        :                                       ; carry = 0 -> successful , file handle -> AX
[  24]        :                                       ; carry = 1 -> failed , AX -> error code
[  25]        :                                       
[  26]        :                                       MOV [chickenFilehandle], AX
[  27]        :                                       ENDM OpenFile
[  28]        :                                       
[  29]        :                                       ReadData MACRO
[  30]        :                                       MOV AH,03Fh
[  31]        :                                       MOV BX, [chickenFilehandle]
[  32]        :                                       MOV CX,1024 ; number of bytes to read
[  33]        :                                       LEA DX, chickenData
[  34]        :                                       INT 21h
[  35]        :                                       
[  36]        :                                       ENDM ReadData
[  37]        :                                       
[  38]        :                                       
[  39]    0050:                                       MAIN PROC FAR
[  40]    0050: B8 04 00                              MOV AX , @DATA
[  41]    0053: 8E D8                                 MOV DS , AX
[  42]        :                                       
[  43]    0055: B4 00                                 MOV AH, 0
[  44]    0057: B0 13                                 MOV AL, 13h
[  45]    0059: CD 10                                 INT 10h
[  46]        :                                       	
[  47]    005B: B4 3D B0 00 BA 00 00 CD 21 A3 0A 00   OpenFile
                                                    
[  48]    0067: B4 3F 8B 1E 0A 00 B9 00 04 BA 0C 00   ReadData
                CD 21                               
[  49]        :                                       	
[  50]    0075: BB 0C 00                              LEA BX , chickenData ; BL contains index at the current drawn pixel
[  51]        :                                       	
[  52]    0078: B9 00 00                              MOV CX,0
[  53]    007B: BA 00 00                              MOV DX,0
[  54]    007E: B4 0C                                 MOV AH,0ch
[  55]        :                                       	
[  56]        :                                       ; Drawing loop
[  57]    0080:                                       drawLoop:
[  58]    0080: 8A 07                                 MOV AL,[BX]
[  59]    0082: CD 10                                 INT 10h
[  60]    0084: 41                                    INC CX
[  61]    0085: 43                                    INC BX
[  62]    0086: 81 F9 40 01                           CMP CX,chickenWidth
[  63]    008A: 75 F4                                 JNE drawLoop
[  64]        :                                       	
[  65]    008C: B9 00 00                              MOV CX , 0
[  66]    008F: 42                                    INC DX
[  67]    0090: 81 FA C8 00                           CMP DX , chickenHeight
[  68]    0094: 75 EA                                 JNE drawLoop
[  69]        :                                       
[  70]        :                                       	
[  71]        :                                       ; Press any key to exit
[  72]    0096: B4 00                                 MOV AH , 0
[  73]    0098: CD 16                                 INT 16h
[  74]        :                                       
[  75]        :                                       
[  76]        :                                       
[  77]        :                                       ;Change to Text MODE
[  78]    009A: B4 00                                 MOV AH,0
[  79]    009C: B0 03                                 MOV AL,03h
[  80]    009E: CD 10                                 INT 10h
[  81]        :                                       
[  82]        :                                       ; return control to operating system
[  83]    00A0: B4 4C                                 MOV AH , 4ch
[  84]    00A2: CD 21                                 INT 21H
[  85]        :                                       
[  86]        :                                       ENDP MAIN
[  87]        :                                       END MAIN
[  88]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: A4      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 40      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: 72      -   check sum (l.byte)
0013: 35      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 05      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 05      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
